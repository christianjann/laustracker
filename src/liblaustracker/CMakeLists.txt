FILE (GLOB_RECURSE project_SRCS *.cpp *.cxx *.cc *.C *.c *.h *.hpp)
SET (project_LIBS ${Boost_LIBRARIES} ${OpenCV_LIBS} ${UEye_LIBRARIES} ${RT_LIBRARY})
SET (project_BIN ${PROJECT_NAME})

#MESSAGE("-----------------------------")
#MESSAGE(${project_LIBS})
#MESSAGE("-----------------------------")

IF (NOT DEFINED project_build_shared)
   IF (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 0)
   ELSE (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 1)
   ENDIF (CMAKE_CROSSCOMPILING)
ENDIF (NOT DEFINED project_build_shared)

IF (NOT DEFINED project_build_static)
   SET(project_build_static 1)
ENDIF (NOT DEFINED project_build_static)

IF (project_build_static)
        set(LAUSTRACKER_STATIC_LIBRARY staticlib CACHE INTERNAL "laustracker static library")
	ADD_LIBRARY(${LAUSTRACKER_STATIC_LIBRARY} STATIC ${project_SRCS})
	TARGET_LINK_LIBRARIES(${LAUSTRACKER_STATIC_LIBRARY} ${project_LIBS})
	SET_TARGET_PROPERTIES(${LAUSTRACKER_STATIC_LIBRARY} PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS ${LAUSTRACKER_STATIC_LIBRARY} DESTINATION lib)
ENDIF(project_build_static)

IF (project_build_shared)
        set(LAUSTRACKER_SHARED_LIBRARY sharedlib CACHE INTERNAL "laustracker shared library")
	ADD_LIBRARY(${LAUSTRACKER_SHARED_LIBRARY} SHARED ${project_SRCS})
	TARGET_LINK_LIBRARIES(${LAUSTRACKER_SHARED_LIBRARY} ${project_LIBS})
	SET_TARGET_PROPERTIES(${LAUSTRACKER_SHARED_LIBRARY} PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS ${LAUSTRACKER_SHARED_LIBRARY} DESTINATION lib)
ENDIF(project_build_shared)
